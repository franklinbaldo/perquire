name: Python CI

on:
  push:
    branches: [ main ] # Adjust if your main branch is different, e.g., master
  pull_request:
    branches: [ main ] # Adjust if your main branch is different

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allows other Python versions to continue if one fails
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Cache pip dependencies

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install project with 'dev' extras for testing tools
        # Also include all provider extras to catch dependency issues early,
        # though tests themselves primarily use mocks.
        pip install .[dev,api-openai,api-gemini,api-anthropic,api-ollama,local-embeddings]
        # If specific system libraries were needed for any of the above, they'd go here.
        # For example: sudo apt-get update && sudo apt-get install -y some-lib

    - name: Lint and Type Check
      run: |
        ruff check src/perquire tests
        ruff format --check src/perquire tests
        mypy src/perquire --ignore-missing-imports --allow-redefinition

    - name: Test with pytest
      run: |
        pytest tests/
        # Optional: Generate coverage report
        # pytest --cov=src/perquire --cov-report=xml
        # - name: Upload coverage to Codecov
        #   uses: codecov/codecov-action@v4 # Updated action version
        #   # token: ${{ secrets.CODECOV_TOKEN }} # Only if private repo or specific needs
        #   # files: ./coverage.xml # specify coverage file
        #   # fail_ci_if_error: true # Optional: fail CI if Codecov upload fails
```
