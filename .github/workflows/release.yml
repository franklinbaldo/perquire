name: Python Package Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v0.1.0, v1.0.0, etc.

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Use a specific Python version for building

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # This configuration assumes PyPI trusted publishing is set up.
      # If using API tokens, you would need:
      # with:
      #   password: ${{ secrets.PYPI_API_TOKEN }}

    # Example of how to create a GitHub Release after successful PyPI publish
    # This step is optional and can be expanded.
    - name: Create GitHub Release
      if: success() # Only run if PyPI publish was successful
      uses: softprops/action-gh-release@v2.0.6 # Check for latest version
      with:
        # The GITHUB_TOKEN is automatically available
        # files: |
        #   dist/* # Optional: attach built distributions to GitHub Release
        # body_path: CHANGELOG.md # Optional: use a changelog file for release notes
        # name: Release ${{ github.ref_name }} # Optional: set release name
        # prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') }} # Optional: mark as pre-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
